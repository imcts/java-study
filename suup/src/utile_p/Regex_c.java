package utile_p;

import java.util.regex.*;



public class Regex_c {
	public static void main(String [] args){
		
		
		//장. : 뒤에 1글자가 온다는것.
		//장.* : .* 은 뒤에 모든 문자열이 붙는다는 것. 방의 개수로 구하겠지?
		//[장|현].* : 장자와 현자로 시작하는 모든 글자들.
		//[0-9] : 0-9까지.
		//[0-9]* : 숫자로 이루어진것들만. 
		//[0-9a-zA-Z_.@]* : 숫자와 대소문자와 _ 와 . 으로 구성된 모든것을 찾아라.
		//[a-zA-Z][0-9a-zA-Z_.@]* : 시작하는 부분은 영문이어야 하고 뒤에는 아무거나 붙는 모든것을 찾아라.
		//ab[0-9a-zA-Z_.@]* : 시작은ab여야 하고 뒤에오는것은 영문이나 숫자나 . 나 @이나 _인걸 찾아라.
		//[현빈|원빈]* : or연산자처럼 사용이 가능하다.
		//[a-zA-Z].{2} : 시작은 영문으로  1글자, 뒤에는 2글자 이상.
		//[0-9a-zA-Z_.@]{5,} : 앞의 형식으로 5글자 이상.
		//[0-9a-zA-Z_.@]{5,11} : 앞의 형식으로 5글자이상 11글자 이하.
		//[가-나] : 이 경우에는 각 글자들의 순서를 다 비교하게 된다. 그러나 한글은 타이밍 잡기가 굉장히 애매하기때문에 권장하지 않는다.
		//*.[가-나].* : ㄱ ㄴ ㄷ ㄹ 순으로 비교하게 된다.
		//
		
		
		String [] pArr = {".*장.*","장.*",".*장","장.",
								"[장|현].*",".*[장|빈].*","[0-9]","[0-9]*","[0-9a-zA-Z_.@]*","[a-zA-Z][0-9a-zA-Z_.@]*"
								,"ab[0-9a-zA-Z_.@]*","[현빈|원빈]*","[현빈|원빈|장혁]*"
								,"[a-zA-Z].{2}","[0-9a-zA-Z_.@]{5,}","[0-9a-zA-Z_.@]{5,11}","[0-9]{3}-[0-9]{3}"
								,"[가-나]",".*[가-나].*"};	
		String [] str = {"장동건","장서건","장혁","장남건","장","장군","최장군","너비아니","나","133-101",
		          "현빈","원빈","미스터빈","커피빈","장희빈",
		          "abc","abc_def","1234","ab_1234","ab1234","aaa@aaa.aaa",
		          "ab56","AABB","aBCd","1","3","1234abc@aaa.aaa","1a2b","a12"};
		

		for(String pp : pArr){
			
		Pattern p = Pattern.compile(pp);
		System.out.print(pp+" : ");
		
		for (String ss : str){
			Matcher m = p.matcher(ss);
			if(m.matches()){
				System.out.print(ss+", ");
			}
		}
		System.out.println();
	
		
		
		}
		

		//패턴을 만들고, 그걸 검사해주는 Matcher가 있고 거기에 패턴값을 넣어주면 Matcher에서 결과값을 돌려준다.
		
		
	}

}
